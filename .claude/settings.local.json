{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(source:*)",
      "Bash(find:*)",
      "Bash(mv:*)",
      "Bash(mkdir:*)",
      "Bash(tree:*)",
      "Bash(ruff:*)",
      "Bash(touch:*)",
      "Bash(cat:*)",
      "Bash(ruff check:*)",
      "Bash(pytest:*)",
      "Bash(python:*)",
      "Bash(python -m pytest:*)",
      "Bash(python3 -m pytest:*)",
      "WebFetch(domain:*)",
      "Bash(gh issue view:*)",
      "mcp__archon",
      "WebSearch",
      "Bash(cp:*)",
      "Bash(sed:*)",
      "Bash(./venv/Scripts/python.exe -m pip:*)",
      "Bash(./venv/Scripts/python.exe -m ingestion.ingest)",
      "WebFetch(domain:www.offorte.com)",
      "WebFetch(domain:ai.pydantic.dev)",
      "Bash(head:*)",
      "Bash(python3:*)",
      "Bash(curl:*)",
      "Bash(env)",
      "Bash(./venv/bin/python -m pip list:*)",
      "SlashCommand(/execute-pydantic-ai-prp Offorte-Airtable-Sync-Agent-PRP.md)",
      "SlashCommand(/execute-pydantic-ai-prp:*)",
      "Read(//home/klarifai/.clientprojects/stbparser/**)",
      "Bash(chmod:*)",
      "Read(//wsl.localhost/Ubuntu-22.04/home/klarifai/.clientprojects/**)",
      "Bash(./venv/bin/python -c \"from backend.core.settings import settings; print('âœ… Settings loaded successfully!'); print(f'Airtable bases: {settings.airtable_base_stb_administratie[:10]}..., {settings.airtable_base_stb_sales[:10]}..., {settings.airtable_base_stb_productie[:10]}...')\")",
      "Bash(PYTHONPATH=. python3 scripts/test_field_mappings.py)",
      "Bash(unzip:*)",
      "Bash(/tmp/ngrok.exe:*)",
      "Bash(npm install:*)",
      "Bash(lt:*)",
      "Bash(PYTHONPATH=. python3 scripts/register_webhook.py)",
      "Bash(PYTHONPATH=. python3 scripts/fetch_proposal.py)",
      "Read(//tmp/**)",
      "Bash(pip install:*)",
      "Bash(PYTHONPATH=. python3 scripts/setup_airtable_bases.py)",
      "Bash(PYTHONPATH=. python3 scripts/create_missing_tables.py)",
      "Bash(PYTHONPATH=. python3 scripts/create_admin_tables.py)",
      "Bash(PYTHONPATH=. python3 scripts/verify_airtable_setup.py)",
      "Bash(PYTHONPATH=. python3 scripts/test_transformation.py)",
      "Bash(export PYTHONPATH=.)",
      "Bash(test:*)",
      "Bash(PYTHONPATH=.:*)",
      "Bash(netstat:*)",
      "Bash(taskkill:*)",
      "Bash(timeout 30 python3 scripts/sync_299654_to_nacalculatie.py)",
      "Bash(timeout 120 python3 scripts/test_7_table_sync.py)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git config:*)",
      "Bash(git commit:*)",
      "Bash(git remote set-url:*)",
      "Bash(git push:*)",
      "Bash(ssh:*)",
      "Bash(gh auth:*)",
      "Bash(ssh-keygen:*)",
      "Bash(ssh-add:*)",
      "Read(//c/Users/rtlka/.ssh/**)",
      "Bash(git reset:*)",
      "Bash(git branch:*)",
      "Bash(git remote add:*)",
      "Bash(docker compose:*)",
      "Bash(docker ps:*)",
      "Bash(./ngrok.exe version)",
      "Bash(docker exec:*)",
      "Bash(claude --version)",
      "Bash(echo $PATH)",
      "Read(//home/klarifai/.config/**)",
      "Read(//home/klarifai/**)",
      "Read(//mnt/c/Users/rtlka/AppData/Roaming/**)",
      "Bash(code --version)",
      "Read(//mnt/c/Users/rtlka/.vscode/extensions/**)",
      "Bash(/mnt/c/Program Files/nodejs/npm.cmd --version)",
      "Read(//mnt/c/Program Files/nodejs/**)",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"npm install -g @anthropic-ai/claude-code\")",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"where claude\")"
    ],
    "deny": []
  }
}
